version: '3.8'

services:
  revierkompass-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.coolify
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
    restart: always
    depends_on:
      - postgres
    networks:
      - revierkompass-network
    volumes:
      - ./backend/data:/app/data
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/stationen', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=revierkompass
      - POSTGRES_USER=${DB_USER:-revierkompass}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
      - revierkompass-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-revierkompass}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  revierkompass-network:
    driver: bridge 